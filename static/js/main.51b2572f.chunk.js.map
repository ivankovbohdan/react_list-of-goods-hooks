{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","sortField","setSortField","isReversed","setIsReversed","preparedGoods","goods","sort","good1","good2","alphabet","localeCompare","length","reverse","getGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,4EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,WAAAA,E,oBAAAA,E,iBAAAA,M,KA2BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAzBR,SAAkBC,EAAiBL,EAAqBE,GACtD,IAAME,EAAa,YAAOC,GAiB1B,OAfAD,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAC9B,QACE,OAAO,MAITT,GACFE,EAAcQ,UAGTR,EAOeS,CAASjB,EAAiBI,EAAWE,GAE3D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaN,EAASc,WACrCO,KAAK,SACLF,UAAS,yBAAoBG,IAAG,CAAE,WAAYjB,IAAcL,EAASc,YAHvE,iCAQA,wBACEM,QAAS,kBAAMd,EAAaN,EAASgB,SACrCK,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,WAAYjB,IAAcL,EAASgB,UAH1E,4BAQA,wBACEI,QAAS,kBAAMZ,GAAeD,IAC9Bc,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,YAAaf,KAHpD,sBAQEF,GAAaE,IACb,wBACEa,QAAS,WACPd,EAAaN,EAASI,SACtBI,GAAc,IAEhBa,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGV,EAAcc,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3F3DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.51b2572f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\n\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  default = '',\n  alphabet = 'alphabet',\n  length = 'length',\n}\n\nfunction getGoods(goods: string[], sortField: SortType, isReversed: boolean) {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    switch (sortField) {\n      case SortType.alphabet:\n        return good1.localeCompare(good2);\n      case SortType.length:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.default);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const preparedGoods = getGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortType.alphabet)}\n          type=\"button\"\n          className={`button is-info ${cn({ 'is-light': sortField !== SortType.alphabet })}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.length)}\n          type=\"button\"\n          className={`button is-success ${cn({ 'is-light': sortField !== SortType.length })}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={`button is-warning ${cn({ 'is-light': !isReversed })}`}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            onClick={() => {\n              setSortField(SortType.default);\n              setIsReversed(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}